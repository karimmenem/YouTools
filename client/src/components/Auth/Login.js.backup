import React, { useState } from 'react';
import { useLanguage } from '../../context/LanguageContext';
import { login } from '../../services/authService';

const Login = ({ onLogin }) => {
  const { language } = useLanguage();
  const [formData, setFormData] = useState({
    username: '',
    password: ''
  });
  const [error, setError] = useState('');
  const [loading, setLoading] = useState(false);

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
    if (error) setError('');
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);
    setError('');

    try {
      const response = await login(formData.username, formData.password);
      
      if (response.success) {
        onLogin(response.data.user);
      } else {
        setError(response.message || (language === 'pt' ? 'Credenciais inválidas' : 'Invalid credentials'));
      }
    } catch (error) {
      setError(language === 'pt' ? 'Erro de conexão' : 'Connection error');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="login-form">
      <h2>{language === 'pt' ? 'Login Administrativo' : 'Admin Login'}</h2>
      
      <div className="demo-credentials" style={{
        background: 'rgba(211, 47, 47, 0.1)',
        border: '1px solid rgba(211, 47, 47, 0.3)',
        borderRadius: '8px',
        padding: '12px',
        marginBottom: '20px',
        fontSize: '14px',
        color: '#d32f2f'
      }}>
        <strong>Admin Credentials:</strong><br/>
        Email: Kamal@youtools.com | Password: Kamal123<br/>
        Email: Rabih@youtools.com | Password: Rabih123
      </div>

      {error && <div className="error-message">{error}</div>}
      
      <form onSubmit={handleSubmit}>
        <div className="form-group">
          <label>{language === 'pt' ? 'Email' : 'Email'}</label>
          <input
            type="email"
            name="username"
            value={formData.username}
            onChange={handleChange}
            required
            disabled={loading}
            placeholder={language === 'pt' ? 'Digite seu email' : 'Enter your email'}
          />
        </div>

        <div className="form-group">
          <label>{language === 'pt' ? 'Senha' : 'Password'}</label>
          <input
            type="password"
            name="password"
            value={formData.password}
            onChange={handleChange}
            required
            disabled={loading}
            placeholder={language === 'pt' ? 'Digite sua senha' : 'Enter your password'}
          />
        </div>

        <button 
          type="submit" 
          className="submit-button"
          disabled={loading}
        >
          {loading 
            ? (language === 'pt' ? 'Entrando...' : 'Logging in...') 
            : (language === 'pt' ? 'Entrar' : 'Login')
          }
        </button>
      </form>
    </div>
  );
};

export default Login;
